{"ast":null,"code":"var s = {\n    0: 8203,\n    1: 8204,\n    2: 8205,\n    3: 8290,\n    4: 8291,\n    5: 8288,\n    6: 65279,\n    7: 8289,\n    8: 119155,\n    9: 119156,\n    a: 119157,\n    b: 119158,\n    c: 119159,\n    d: 119160,\n    e: 119161,\n    f: 119162\n  },\n  c = {\n    0: 8203,\n    1: 8204,\n    2: 8205,\n    3: 65279\n  },\n  u = new Array(4).fill(String.fromCodePoint(c[0])).join(\"\");\nfunction E(t) {\n  let e = JSON.stringify(t);\n  return `${u}${Array.from(e).map(r => {\n    let n = r.charCodeAt(0);\n    if (n > 255) throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);\n    return Array.from(n.toString(4).padStart(4, \"0\")).map(o => String.fromCodePoint(c[o])).join(\"\");\n  }).join(\"\")}`;\n}\nfunction I(t) {\n  return !Number.isNaN(Number(t)) || /[a-z]/i.test(t) && !/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t) ? !1 : !!Date.parse(t);\n}\nfunction T(t) {\n  try {\n    new URL(t, t.startsWith(\"/\") ? \"https://acme.com\" : void 0);\n  } catch {\n    return !1;\n  }\n  return !0;\n}\nfunction C(t, e, r = \"auto\") {\n  return r === !0 || r === \"auto\" && (I(t) || T(t)) ? t : `${t}${E(e)}`;\n}\nObject.fromEntries(Object.entries(c).map(t => t.reverse()));\nObject.fromEntries(Object.entries(s).map(t => t.reverse()));\nvar S = `${Object.values(s).map(t => `\\\\u{${t.toString(16)}}`).join(\"\")}`,\n  f = new RegExp(`[${S}]{4,}`, \"gu\");\nfunction _(t) {\n  var e;\n  return {\n    cleaned: t.replace(f, \"\"),\n    encoded: ((e = t.match(f)) == null ? void 0 : e[0]) || \"\"\n  };\n}\nfunction O(t) {\n  return t && JSON.parse(_(JSON.stringify(t)).cleaned);\n}\nfunction stegaClean(result) {\n  return O(result);\n}\nconst vercelStegaCleanAll = stegaClean;\nexport { C, stegaClean as s, vercelStegaCleanAll as v };","map":{"version":3,"names":["s","a","b","c","d","e","f","u","Array","fill","String","fromCodePoint","join","E","t","JSON","stringify","from","map","r","n","charCodeAt","Error","toString","padStart","o","I","Number","isNaN","test","Date","parse","T","URL","startsWith","C","Object","fromEntries","entries","reverse","S","values","RegExp","_","cleaned","replace","encoded","match","O","stegaClean","result","vercelStegaCleanAll"],"sources":["C:\\Users\\yabuti\\yabuti\\frontend\\node_modules\\@sanity\\client\\node_modules\\@vercel\\stega\\dist\\index.mjs","C:\\Users\\yabuti\\yabuti\\frontend\\node_modules\\@sanity\\client\\src\\stega\\stegaClean.ts"],"sourcesContent":["var s={0:8203,1:8204,2:8205,3:8290,4:8291,5:8288,6:65279,7:8289,8:119155,9:119156,a:119157,b:119158,c:119159,d:119160,e:119161,f:119162},c={0:8203,1:8204,2:8205,3:65279},u=new Array(4).fill(String.fromCodePoint(c[0])).join(\"\"),m=String.fromCharCode(0);function E(t){let e=JSON.stringify(t);return`${u}${Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(4).padStart(4,\"0\")).map(o=>String.fromCodePoint(c[o])).join(\"\")}).join(\"\")}`}function y(t){let e=JSON.stringify(t);return Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(16).padStart(2,\"0\")).map(o=>String.fromCodePoint(s[o])).join(\"\")}).join(\"\")}function I(t){return!Number.isNaN(Number(t))||/[a-z]/i.test(t)&&!/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t)?!1:Boolean(Date.parse(t))}function T(t){try{new URL(t,t.startsWith(\"/\")?\"https://acme.com\":void 0)}catch{return!1}return!0}function C(t,e,r=\"auto\"){return r===!0||r===\"auto\"&&(I(t)||T(t))?t:`${t}${E(e)}`}var x=Object.fromEntries(Object.entries(c).map(t=>t.reverse())),g=Object.fromEntries(Object.entries(s).map(t=>t.reverse())),S=`${Object.values(s).map(t=>`\\\\u{${t.toString(16)}}`).join(\"\")}`,f=new RegExp(`[${S}]{4,}`,\"gu\");function G(t){let e=t.match(f);if(!!e)return h(e[0],!0)[0]}function $(t){let e=t.match(f);if(!!e)return e.map(r=>h(r)).flat()}function h(t,e=!1){let r=Array.from(t);if(r.length%2===0){if(r.length%4||!t.startsWith(u))return A(r,e)}else throw new Error(\"Encoded data has invalid length\");let n=[];for(let o=r.length*.25;o--;){let p=r.slice(o*4,o*4+4).map(d=>x[d.codePointAt(0)]).join(\"\");n.unshift(String.fromCharCode(parseInt(p,4)))}if(e){n.shift();let o=n.indexOf(m);return o===-1&&(o=n.length),[JSON.parse(n.slice(0,o).join(\"\"))]}return n.join(\"\").split(m).filter(Boolean).map(o=>JSON.parse(o))}function A(t,e){var d;let r=[];for(let i=t.length*.5;i--;){let a=`${g[t[i*2].codePointAt(0)]}${g[t[i*2+1].codePointAt(0)]}`;r.unshift(String.fromCharCode(parseInt(a,16)))}let n=[],o=[r.join(\"\")],p=10;for(;o.length;){let i=o.shift();try{if(n.push(JSON.parse(i)),e)return n}catch(a){if(!p--)throw a;let l=+((d=a.message.match(/\\sposition\\s(\\d+)$/))==null?void 0:d[1]);if(!l)throw a;o.unshift(i.substring(0,l),i.substring(l))}}return n}function _(t){var e;return{cleaned:t.replace(f,\"\"),encoded:((e=t.match(f))==null?void 0:e[0])||\"\"}}function O(t){return t&&JSON.parse(_(JSON.stringify(t)).cleaned)}export{f as VERCEL_STEGA_REGEX,y as legacyStegaEncode,O as vercelStegaClean,C as vercelStegaCombine,G as vercelStegaDecode,$ as vercelStegaDecodeAll,E as vercelStegaEncode,_ as vercelStegaSplit};\n","import {vercelStegaClean} from '@vercel/stega'\n\n/**\n * Can take a `result` JSON from a `const {result} = client.fetch(query, params, {filterResponse: false})`\n * and remove all stega-encoded data from it.\n * @public\n */\nexport function stegaClean<Result = unknown>(result: Result): Result {\n  return vercelStegaClean<Result>(result)\n}\n\n/**\n * Can take a `result` JSON from a `const {result} = client.fetch(query, params, {filterResponse: false})`\n * and remove all stega-encoded data from it.\n * @alpha\n * @deprecated Use `stegaClean` instead\n */\nexport const vercelStegaCleanAll = stegaClean\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}